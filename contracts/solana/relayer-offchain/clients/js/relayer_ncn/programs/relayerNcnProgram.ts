/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  containsBytes,
  getU8Encoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/web3.js';
import {
  type ParsedAdminRegisterStMintInstruction,
  type ParsedAdminSetWeightInstruction,
  type ParsedCastVoteInstruction,
  type ParsedInitializeBallotBoxInstruction,
  type ParsedInitializeConfigInstruction,
  type ParsedInitializeEpochSnapshotInstruction,
  type ParsedInitializeOperatorSnapshotInstruction,
  type ParsedInitializeVaultRegistryInstruction,
  type ParsedInitializeWeightTableInstruction,
  type ParsedReallocBallotBoxInstruction,
  type ParsedReallocOperatorSnapshotInstruction,
  type ParsedReallocVaultRegistryInstruction,
  type ParsedReallocWeightTableInstruction,
  type ParsedRegisterVaultInstruction,
  type ParsedRollupTransactionInstruction,
  type ParsedSnapshotVaultOperatorDelegationInstruction,
} from '../instructions';

export const RELAYER_NCN_PROGRAM_PROGRAM_ADDRESS =
  'J2rxY1z3Wgt4VYrN4EVh6FGnEZHnEyHqQcwvd2kfKnxh' as Address<'J2rxY1z3Wgt4VYrN4EVh6FGnEZHnEyHqQcwvd2kfKnxh'>;

export enum RelayerNcnProgramAccount {
  BallotBox,
  Config,
  EpochSnapshot,
  OperatorSnapshot,
  FinalTransaction,
  VaultRegistry,
  WeightTable,
}

export enum RelayerNcnProgramInstruction {
  InitializeConfig,
  InitializeVaultRegistry,
  ReallocVaultRegistry,
  AdminRegisterStMint,
  RegisterVault,
  InitializeWeightTable,
  ReallocWeightTable,
  AdminSetWeight,
  InitializeEpochSnapshot,
  InitializeOperatorSnapshot,
  ReallocOperatorSnapshot,
  SnapshotVaultOperatorDelegation,
  InitializeBallotBox,
  ReallocBallotBox,
  CastVote,
  RollupTransaction,
}

export function identifyRelayerNcnProgramInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): RelayerNcnProgramInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return RelayerNcnProgramInstruction.InitializeConfig;
  }
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return RelayerNcnProgramInstruction.InitializeVaultRegistry;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return RelayerNcnProgramInstruction.ReallocVaultRegistry;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return RelayerNcnProgramInstruction.AdminRegisterStMint;
  }
  if (containsBytes(data, getU8Encoder().encode(4), 0)) {
    return RelayerNcnProgramInstruction.RegisterVault;
  }
  if (containsBytes(data, getU8Encoder().encode(5), 0)) {
    return RelayerNcnProgramInstruction.InitializeWeightTable;
  }
  if (containsBytes(data, getU8Encoder().encode(6), 0)) {
    return RelayerNcnProgramInstruction.ReallocWeightTable;
  }
  if (containsBytes(data, getU8Encoder().encode(7), 0)) {
    return RelayerNcnProgramInstruction.AdminSetWeight;
  }
  if (containsBytes(data, getU8Encoder().encode(8), 0)) {
    return RelayerNcnProgramInstruction.InitializeEpochSnapshot;
  }
  if (containsBytes(data, getU8Encoder().encode(9), 0)) {
    return RelayerNcnProgramInstruction.InitializeOperatorSnapshot;
  }
  if (containsBytes(data, getU8Encoder().encode(10), 0)) {
    return RelayerNcnProgramInstruction.ReallocOperatorSnapshot;
  }
  if (containsBytes(data, getU8Encoder().encode(11), 0)) {
    return RelayerNcnProgramInstruction.SnapshotVaultOperatorDelegation;
  }
  if (containsBytes(data, getU8Encoder().encode(12), 0)) {
    return RelayerNcnProgramInstruction.InitializeBallotBox;
  }
  if (containsBytes(data, getU8Encoder().encode(13), 0)) {
    return RelayerNcnProgramInstruction.ReallocBallotBox;
  }
  if (containsBytes(data, getU8Encoder().encode(14), 0)) {
    return RelayerNcnProgramInstruction.CastVote;
  }
  if (containsBytes(data, getU8Encoder().encode(15), 0)) {
    return RelayerNcnProgramInstruction.RollupTransaction;
  }
  throw new Error(
    'The provided instruction could not be identified as a relayerNcnProgram instruction.'
  );
}

export type ParsedRelayerNcnProgramInstruction<
  TProgram extends string = 'J2rxY1z3Wgt4VYrN4EVh6FGnEZHnEyHqQcwvd2kfKnxh',
> =
  | ({
      instructionType: RelayerNcnProgramInstruction.InitializeConfig;
    } & ParsedInitializeConfigInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.InitializeVaultRegistry;
    } & ParsedInitializeVaultRegistryInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.ReallocVaultRegistry;
    } & ParsedReallocVaultRegistryInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.AdminRegisterStMint;
    } & ParsedAdminRegisterStMintInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.RegisterVault;
    } & ParsedRegisterVaultInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.InitializeWeightTable;
    } & ParsedInitializeWeightTableInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.ReallocWeightTable;
    } & ParsedReallocWeightTableInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.AdminSetWeight;
    } & ParsedAdminSetWeightInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.InitializeEpochSnapshot;
    } & ParsedInitializeEpochSnapshotInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.InitializeOperatorSnapshot;
    } & ParsedInitializeOperatorSnapshotInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.ReallocOperatorSnapshot;
    } & ParsedReallocOperatorSnapshotInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.SnapshotVaultOperatorDelegation;
    } & ParsedSnapshotVaultOperatorDelegationInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.InitializeBallotBox;
    } & ParsedInitializeBallotBoxInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.ReallocBallotBox;
    } & ParsedReallocBallotBoxInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.CastVote;
    } & ParsedCastVoteInstruction<TProgram>)
  | ({
      instructionType: RelayerNcnProgramInstruction.RollupTransaction;
    } & ParsedRollupTransactionInstruction<TProgram>);
