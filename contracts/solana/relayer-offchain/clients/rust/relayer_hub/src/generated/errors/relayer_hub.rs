//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum RelayerHubError {
    /// 6000 - Not initialized.
    #[error("Not initialized.")]
    NotInitialized = 0x1770,
    /// 6001 - Already initialized.
    #[error("Already initialized.")]
    Initialized = 0x1771,
    /// 6002 - Wrong account.
    #[error("Wrong account.")]
    AccountError = 0x1772,
    /// 6003 - OwnerOnly
    #[error("OwnerOnly")]
    OwnerOnly = 0x1773,
    /// 6004 - Not in your epoch
    #[error("Not in your epoch")]
    NotYourEpoch = 0x1774,
    /// 6005 - Undefined message data format
    #[error("Undefined message data format")]
    UndefinedMessageFormat = 0x1775,
    /// 6006 - Wrong message data format
    #[error("Wrong message data format")]
    MessageFormatError = 0x1776,
}

impl solana_program::program_error::PrintProgramError for RelayerHubError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

impl<T> solana_program::decode_error::DecodeError<T> for RelayerHubError {
    fn type_of() -> &'static str {
        "RelayerHubError"
    }
}

